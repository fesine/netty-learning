内存模型的含义
内存模型描述程序的可能行为；
java编程语言内存模型通过检查执行跟踪中的每个读动作，并且根据某些规则检查该读操作观察到的写操作是否有效来工作；
只要程序的所有执行产生的结果都可以由内存模型来预测。具体的实现者任意实现，包括操作的重排序和删除不必要的同步。
内存模型决定了在程序每个点上可以读取什么值。


多线程中的问题
1、所见非所得
2、无法肉眼去检测程序的准确性
3、不同的运行平台表现不同
4、错误很难重现

共享变量
可以在线程之间共享的内存称为共享内存或堆内存
所有实例字段、静态字段、数组元素都存储在堆内存中
如果至少有一个访问是写的，那么对同一个变量的两次访问（读或写）是冲突的

线程操作的定义
操作定义：
1、write要写的变量以及要写的值
2、read要读的变量以及可见的写入值（由此，我们可以确定可见的值）
3、lock要锁的管程（监视器monitor）
4、unlock要解锁的管程
5、外部操作（socket等）
6、启动和终止

程序顺序：如果一个程序没有数据竞争，那么程序的所有执行看起来都是顺序一致的
本规范只涉及线程间的操作；